{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","href","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","props","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf53532d.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n   \n\n    return ( \n        <button \n            onClick={onClick} \n            style={{ backgroundColor: color }} \n            className='btn'\n        >\n            {text}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n\n","import PropTypes from 'prop-types';\nimport Button from './Button'\nimport { useLocation } from 'react-router-dom'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    const location = useLocation()\n    \n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            {location.pathname === '/' && (<Button color={showAdd ? 'magenta' : 'orange'} text={showAdd ? \n            'Close' : 'Add'} onClick={onAdd} \n            />\n            )}\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Bucket List',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired, \n}\n\n// CSS in JS.\nconst headingStyle = {\n    color: 'red', \n    backgroundColor: 'black',\n}\n\nexport default Header\n","import { Link } from 'react-router-dom'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Link to='/about'>About</Link> <br />\n            <a href='http://www.jasonhargroveart.com/'>www.jaosnhargroveart.com</a>\n            {/* <a href='/about'>About</a> */}\n        </footer>\n    )\n}\n\nexport default Footer\n","import { FaTrashAlt } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div \n            className={`task ${task.reminder ?\n            'reminder' : ''}`} \n            onDoubleClick={() => onToggle(task.id)}>\n            <h3>\n              {task.text}{' '} \n              <FaTrashAlt \n                style={{ color: 'magenta', cursor: 'pointer'}} \n                onClick={() => onDelete(task.id)}\n              /> \n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = (props) => {\n    return (\n        <>\n          {props.tasks.map((task, index) => (\n            <Task \n              key={index} \n              task={task} \n              onDelete={props.onDelete}\n              onToggle={props.onToggle}\n            />     \n          ))}  \n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n \nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text) {\n            alert('Please Add a Task')\n            return\n        }\n        onAdd({ text, day, reminder })\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Bucket List Task</label>\n                <input \n                type='text' placeholder='Add Task'\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                 />\n            </div>\n            <div className='form-control'>\n                <label>What day? What Time?</label>\n                <input \n                type='text' placeholder='Add Day and Time'\n                value={day}\n                onChange={(e) => setDay(e.target.value)}\n                 />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Remind Yourself</label>\n                <input \n                type='checkbox' \n                checked={reminder}\n                value={reminder}\n                onChange={(e) => setReminder(e.currentTarget.checked)}\n                />\n            </div>\n\n            <input type='submit' value='Save That Task'\n            className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask\n","import { Link } from 'react-router-dom'\n\nconst About = () => {\n    return (\n        <div>\n           <h4>Hi there. This is where I tell you all about the application. Or someting.</h4> <br />\n            <Link to='/'>Go Back</Link>\n           {/* <a href='/'>Go Back</a> */}\n        </div>\n    )\n}\n\nexport default About\n","import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // Fetch Tasks.\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n    // Fetch Task <-- Singular.\n    const fetchTask = async (id) => {\n      const res = await fetch(`http://localhost:5000/tasks/${id}`)\n      const data = await res.json()\n  \n      return data\n    }\n\n// Add Task.\nconst addTask = async (task) => {\n  const res = await fetch('http://localhost:5000/tasks', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(task),\n  })\n\n  const data = await res.json()\n\n  setTasks([...tasks, data])\n\n  // const id = Math.floor(Math.random() * 1000) + 1\n  // const newTask = { id, ...task }\n  // setTasks([...tasks, newTask])\n}\n\n// Delete Task.\nconst deleteTask = async (id) => {\n  await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'DELETE'\n  })\n\n  setTasks(tasks.filter((task) => task.id !==id))\n}\n\n// Toggle Reminder.\nconst toggleReminder = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updTask = { ...taskToToggle,\n  reminder: !taskToToggle.reminder }\n\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(updTask)\n  })\n\n  const data = await res.json()\n\n  setTasks(\n    tasks.map((task) => \n      task.id === id ? { ...task, reminder:\n      !task.reminder } : task\n    )\n  )\n}\n\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      \n\n      <Route \n        path='/'\n        exact \n        render={(props) => (\n        <>\n          {showAddTask && <AddTask onAdd=\n          {addTask} />}\n          {tasks.length > 0 ? (\n            <Tasks \n              tasks={tasks} \n              onDelete={deleteTask} \n              onToggle={toggleReminder} \n              /> \n          ) : (\n            'No Tasks to Show'\n          )}\n        </>\n      )} />\n      <Route path='/about' component={About} />\n      <Footer />\n    </div>\n    </Router>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}